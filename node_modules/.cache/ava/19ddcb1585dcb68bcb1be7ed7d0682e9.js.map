{"version":3,"sources":["Header.spec.js"],"names":["intlProp","enabledLanguages","router","isActive","stub","returns","wrapper","context","intl","t","truthy","find","first","containsMatchingElement","is","length","toggleAddPost","spy","simulate","calledOnce"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,mEAAsBC,kBAAkB,CAAC,IAAD,EAAO,IAAP,CAAxC,GAAN;;AAEA,mBAAK,6BAAL,EAAoC,aAAK;AAAA;AAAA;;AACvC,MAAMC,SAAS;AACbC,cAAU,gBAAMC,IAAN,GAAaC,OAAb,CAAqB,IAArB;AADG,GAAf;AAGA,MAAMC,UAAU,qBACd,gDAAQ,gBAAgB,0BAAM,CAAE,CAAhC,EAAkC,MAAMN,QAAxC,EAAkD,eAAe,yBAAM,CAAE,CAAzE,GADc,EAEd;AACEO,aAAS;AACPL,oBADO;AAEPM;AAFO;AADX,GAFc,CAAhB;;AAUAC,IAAEC,MAAF,uBAAS,mGAAQC,IAAR,CAAa,MAAb,8CAAqBC,KAArB,iCAA6BC,uBAA7B,CAAqD,6DAAkB,IAAG,WAArB,GAArD,CAAT;AAAA;AAAA;AAAA;AAAA;AACAJ,IAAEK,EAAF,yBAAK,qEAAQH,IAAR,CAAa,GAAb,yBAAkBI,MAAvB;AAAA;AAAA;AAAA;AAAA,MAA+B,CAA/B;AACD,CAhBD;;AAkBA,mBAAK,4CAAL,EAAmD,aAAK;AAAA;;AACtD,MAAMb,SAAS;AACbC,cAAU,gBAAMC,IAAN,GAAaC,OAAb,CAAqB,KAArB;AADG,GAAf;AAGA,MAAMC,UAAU,qBACd,gDAAQ,gBAAgB,0BAAM,CAAE,CAAhC,EAAkC,MAAMN,QAAxC,EAAkD,eAAe,yBAAM,CAAE,CAAzE,GADc,EAEd;AACEO,aAAS;AACPL,oBADO;AAEPM;AAFO;AADX,GAFc,CAAhB;;AAUAC,IAAEK,EAAF,yBAAK,qEAAQH,IAAR,CAAa,GAAb,yBAAkBI,MAAvB;AAAA;AAAA;AAAA;AAAA,MAA+B,CAA/B;AACD,CAfD;;AAiBA,mBAAK,+BAAL,EAAsC,aAAK;AAAA;;AACzC,MAAMb,SAAS;AACbC,cAAU,gBAAMC,IAAN,GAAaC,OAAb,CAAqB,IAArB;AADG,GAAf;AAGA,MAAMW,gBAAgB,gBAAMC,GAAN,EAAtB;AACA,MAAMX,UAAU,qBACd,gDAAQ,gBAAgB,0BAAM,CAAE,CAAhC,EAAkC,MAAMN,QAAxC,EAAkD,eAAegB,aAAjE,GADc,EAEd;AACET,aAAS;AACPL,oBADO;AAEPM;AAFO;AADX,GAFc,CAAhB;;AAUAF,UAAQK,IAAR,CAAa,GAAb,EAAkBC,KAAlB,GAA0BM,QAA1B,CAAmC,OAAnC;AACAT,IAAEC,MAAF,yBAAS,iDAAcS,UAAvB;AAAA;AAAA;AAAA;AAAA;AACD,CAjBD;;;;;;;;gCArCMnB,Q","file":"Header.spec.js","sourcesContent":["import React from 'react';\nimport test from 'ava';\nimport sinon from 'sinon';\nimport { shallow } from 'enzyme';\nimport { FormattedMessage } from 'react-intl';\nimport { Header } from '../../components/Header/Header';\nimport { intl } from '../../../../util/react-intl-test-helper';\n\nconst intlProp = { ...intl, enabledLanguages: ['en', 'fr'] };\n\ntest('renders the header properly', t => {\n  const router = {\n    isActive: sinon.stub().returns(true),\n  };\n  const wrapper = shallow(\n    <Header switchLanguage={() => {}} intl={intlProp} toggleAddPost={() => {}} />,\n    {\n      context: {\n        router,\n        intl,\n      },\n    }\n  );\n\n  t.truthy(wrapper.find('Link').first().containsMatchingElement(<FormattedMessage id=\"siteTitle\" />));\n  t.is(wrapper.find('a').length, 1);\n});\n\ntest('doesn\\'t add post in pages other than home', t => {\n  const router = {\n    isActive: sinon.stub().returns(false),\n  };\n  const wrapper = shallow(\n    <Header switchLanguage={() => {}} intl={intlProp} toggleAddPost={() => {}} />,\n    {\n      context: {\n        router,\n        intl,\n      },\n    }\n  );\n\n  t.is(wrapper.find('a').length, 0);\n});\n\ntest('toggleAddPost called properly', t => {\n  const router = {\n    isActive: sinon.stub().returns(true),\n  };\n  const toggleAddPost = sinon.spy();\n  const wrapper = shallow(\n    <Header switchLanguage={() => {}} intl={intlProp} toggleAddPost={toggleAddPost} />,\n    {\n      context: {\n        router,\n        intl,\n      },\n    }\n  );\n\n  wrapper.find('a').first().simulate('click');\n  t.truthy(toggleAddPost.calledOnce);\n});\n"]}