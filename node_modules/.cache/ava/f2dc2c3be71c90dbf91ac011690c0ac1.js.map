{"version":3,"sources":["App.spec.js"],"names":["intlProp","enabledLanguages","children","dispatch","spy","props","intl","wrapper","t","is","find","length","prop","instance","toggleAddPostSection","truthy","hasClass","container","prototype","context","router","isActive","stub","returns","push","replace","go","goBack","goForward","setRouteLeaveHook","createHref","childContextTypes","PropTypes","object","componentDidMount","calledOnce","restore","calledWith"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,mEAAsBC,kBAAkB,CAAC,IAAD,EAAO,IAAP,CAAxC,GAAN;AACA,IAAMC,WAAW;AAAA;AAAA;AAAA;AAAA,CAAjB;AACA,IAAMC,WAAW,gBAAMC,GAAN,EAAjB;AACA,IAAMC,QAAQ;AACZH,oBADY;AAEZC,oBAFY;AAGZG,QAAMN;AAHM,CAAd;;AAMA,mBAAK,kBAAL,EAAyB,aAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAC5B,MAAMO,UAAU,qBACd,wCAASF,KAAT,CADc,CAAhB;;AAIA;AACAG,IAAEC,EAAF,uBAAK,mEAAQC,IAAR,CAAa,QAAb,yBAAuBC,MAA5B;AAAA;AAAA;AAAA;AAAA,MAAoC,CAApC;AACAH,IAAEC,EAAF,yBAAK,qEAAQC,IAAR,CAAa,QAAb,yBAAuBC,MAA5B;AAAA;AAAA;AAAA;AAAA,MAAoC,CAApC;AACAH,IAAEC,EAAF,yBAAK,4EAAQC,IAAR,CAAa,QAAb,gCAAuBE,IAAvB,CAA4B,eAA5B,CAAL;AAAA;AAAA;AAAA;AAAA,8BAAmD,qEAAQC,QAAR,0BAAmBC,oBAAtE;AAAA;AAAA;AAAA;AAAA;AACAN,IAAEO,MAAF,yBAAS,4EAAQL,IAAR,CAAa,cAAb,gCAA6BM,QAA7B,aAAsC,6DAAOC,SAA7C,6BAAT;AAAA;AAAA;AAAA;AAAA;AACAT,IAAEO,MAAF,yBAAS,4EAAQL,IAAR,CAAa,cAAb,gCAA6BR,QAA7B,EAAT;AAAA;AAAA;AAAA;AAAA,MAAkDA,QAAlD;AACD,CAXD;;AAaA,mBAAK,yBAAL,EAAgC,aAAK;AAAA;;AACnC,kBAAME,GAAN,CAAU,SAAIc,SAAd,EAAyB,mBAAzB;AACA,qBACE,wCAASb,KAAT,CADF,EAEE;AACEc,aAAS;AACPC,cAAQ;AACNC,kBAAU,gBAAMC,IAAN,GAAaC,OAAb,CAAqB,IAArB,CADJ;AAENC,cAAM,gBAAMF,IAAN,EAFA;AAGNG,iBAAS,gBAAMH,IAAN,EAHH;AAINI,YAAI,gBAAMJ,IAAN,EAJE;AAKNK,gBAAQ,gBAAML,IAAN,EALF;AAMNM,mBAAW,gBAAMN,IAAN,EANL;AAONO,2BAAmB,gBAAMP,IAAN,EAPb;AAQNQ,oBAAY,gBAAMR,IAAN;AARN,OADD;AAWPhB;AAXO,KADX;AAcEyB,uBAAmB;AACjBX,cAAQ,gBAAMY,SAAN,CAAgBC,MADP;AAEjB3B;AAFiB;AAdrB,GAFF;;AAuBAE,IAAEO,MAAF,yBAAS,kFAAIG,SAAJ,+BAAcgB,iBAAd,wBAAgCC,UAAzC;AAAA;AAAA;AAAA;AAAA;AACA,WAAIjB,SAAJ,CAAcgB,iBAAd,CAAgCE,OAAhC;AACD,CA3BD;;AA6BA,mBAAK,uDAAL,EAA8D,aAAK;AAAA;AAAA;;AACjE,MAAM7B,UAAU,qBACd,wCAASF,KAAT,CADc,CAAhB;;AAIAE,UAAQM,QAAR,GAAmBC,oBAAnB;AACAN,IAAEO,MAAF,yBAAS,4CAASoB,UAAlB;AAAA;AAAA;AAAA;AAAA;AACA3B,IAAEO,MAAF,yBAAS,mDAASsB,UAAT,aAAoB,gCAApB,6BAAT;AAAA;AAAA;AAAA;AAAA;AACD,CARD;;;;;;;;gCAnDMrC,Q;;gCACAE,Q;;gCACAC,Q;;gCACAE,K","file":"App.spec.js","sourcesContent":["import React from 'react';\nimport test from 'ava';\nimport sinon from 'sinon';\nimport { shallow, mount } from 'enzyme';\nimport { App } from '../App';\nimport styles from '../App.css';\nimport { intlShape } from 'react-intl';\nimport { intl } from '../../../util/react-intl-test-helper';\nimport { toggleAddPost } from '../AppActions';\n\nconst intlProp = { ...intl, enabledLanguages: ['en', 'fr'] };\nconst children = <h1>Test</h1>;\nconst dispatch = sinon.spy();\nconst props = {\n  children,\n  dispatch,\n  intl: intlProp,\n};\n\ntest('renders properly', t => {\n  const wrapper = shallow(\n    <App {...props} />\n  );\n\n  // t.is(wrapper.find('Helmet').length, 1);\n  t.is(wrapper.find('Header').length, 1);\n  t.is(wrapper.find('Footer').length, 1);\n  t.is(wrapper.find('Header').prop('toggleAddPost'), wrapper.instance().toggleAddPostSection);\n  t.truthy(wrapper.find('Header + div').hasClass(styles.container));\n  t.truthy(wrapper.find('Header + div').children(), children);\n});\n\ntest('calls componentDidMount', t => {\n  sinon.spy(App.prototype, 'componentDidMount');\n  mount(\n    <App {...props} />,\n    {\n      context: {\n        router: {\n          isActive: sinon.stub().returns(true),\n          push: sinon.stub(),\n          replace: sinon.stub(),\n          go: sinon.stub(),\n          goBack: sinon.stub(),\n          goForward: sinon.stub(),\n          setRouteLeaveHook: sinon.stub(),\n          createHref: sinon.stub(),\n        },\n        intl,\n      },\n      childContextTypes: {\n        router: React.PropTypes.object,\n        intl: intlShape,\n      },\n    },\n  );\n\n  t.truthy(App.prototype.componentDidMount.calledOnce);\n  App.prototype.componentDidMount.restore();\n});\n\ntest('calling toggleAddPostSection dispatches toggleAddPost', t => {\n  const wrapper = shallow(\n    <App {...props} />\n  );\n\n  wrapper.instance().toggleAddPostSection();\n  t.truthy(dispatch.calledOnce);\n  t.truthy(dispatch.calledWith(toggleAddPost()));\n});\n"]}